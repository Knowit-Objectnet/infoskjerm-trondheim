export struct Snowflake {
    x: float,
    y: float,
}

export struct SpookyFace {
    pos: Point,
    size: length,
    hidden: bool}

export struct Bat {
    pos: Point,
}

component Flake inherits Rectangle {
    width: 10px;
    height: 10px;
    background: @linear-gradient(145deg, #ffffff 70%, #0074d9 100%);
    border-radius: self.width / 2;
}

export component SeasonEffects inherits Rectangle {
    in property <[Snowflake]> snow;
    in property <SpookyFace> spooky_face;
    in property <Bat> bat;

    width: 100%;
    height: 100%;

    for flake in snow: Flake {
        x: flake.x * 1px;
        y: flake.y * 1px;
        z: 200.0;
    }

    face := Image {
        source: @image-url("../img/seasons/face.png");
        x: spooky_face.pos.x;
        y: spooky_face.pos.y;
        z: 200.0;
        width: spooky_face.size;
        opacity: spooky_face.hidden ? 0% : 30%;

        animate opacity {
            duration: 2s;
            easing: ease-in-out;
        }
    }

    Image {
        // Uses "visible" to hide the bat instead of conditional
        //rendering due to https://github.com/slint-ui/slint/issues/3953
        visible: bat.pos != { x:0, y: 0 };

        property <[image]> frames: [
            @image-url("../img/seasons/halloween/bat-0.png"),
            @image-url("../img/seasons/halloween/bat-1.png"),
            @image-url("../img/seasons/halloween/bat-2.png"),
            @image-url("../img/seasons/halloween/bat-3.png"),
            @image-url("../img/seasons/halloween/bat-4.png"),
            @image-url("../img/seasons/halloween/bat-5.png"),
            @image-url("../img/seasons/halloween/bat-6.png"),
            @image-url("../img/seasons/halloween/bat-7.png"),
            @image-url("../img/seasons/halloween/bat-8.png"),
        ];
        property <duration> duration: 1000ms;
        property <int> total-frames: frames.length - 1;
        source: frames[(total-frames * (animation-tick() / duration)).mod(total-frames)];
        x: bat.pos.x;
        y: bat.pos.y;
        z: 200;

        animate x, y {
            duration: 10s;
            easing: ease;
        }
    }
}

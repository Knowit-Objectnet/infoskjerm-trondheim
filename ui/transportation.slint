export struct StopPlaceDataRow {
    transportMode: image,
    publicCode: string,
    destinationFrontText: string,
    aimedDepartureTime: string,
}

export struct StopPlaceData {
    stopName: string,
    stopDataRows: [StopPlaceDataRow]
}

component StopPlaceRow {
    in property <StopPlaceDataRow> stopPlaceDataRow;

    HorizontalLayout {
        spacing: 1.5rem;
        alignment: start;
        Image {
            max-height: 8.75rem;
            max-width: 8.75rem;
            source: stopPlaceDataRow.transportMode;
        }
        Text {
            font-size: 3rem;
            text: stopPlaceDataRow.publicCode;
            color: whitesmoke;
        }
        Text {
            font-size: 3rem;
            text: stopPlaceDataRow.destinationFrontText;
            color: whitesmoke;
        }
        Text {
            font-size: 3rem;
            text: stopPlaceDataRow.aimedDepartureTime;
            color: yellow;
        }
    }
}

component StopPlaceColumn {
    in property <StopPlaceData> stopPlaceData;

    VerticalLayout {
        alignment: start;
        padding-top: 2rem;

        Text {
            color: whitesmoke;
            font-size: 4rem;
            text: stopPlaceData.stopName;
            horizontal-alignment: center;
        }

        for stopPlaceRow in stopPlaceData.stopDataRows : StopPlaceRow {
            stopPlaceDataRow: stopPlaceRow;
        }
    }
}

export component TransportationWidget{
    in property <[StopPlaceData]> stopPlacesData;

    HorizontalLayout {
        for stopPlace in stopPlacesData : StopPlaceColumn {
            stopPlaceData: stopPlace;
        }
    }
}
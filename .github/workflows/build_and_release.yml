name: Build and release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
    inputs:
      tags:
        description: 'Tag'
        required: true
        type: boolean

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Install SSL-stuff
      run: sudo apt install libssl-dev && sudo apt install pkg-config && ldd --version
    - name: Install ARM Target
      run: rustup target add armv7-unknown-linux-gnueabihf
    - name: Install Cross
      run: cargo install cross
    - name: Build
      run: cross build --release --target=armv7-unknown-linux-gnueabihf
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./target/armv7-unknown-linux-gnueabihf/release/infoskjerm
        asset_name: infoskjerm
        asset_content_type: application/zip
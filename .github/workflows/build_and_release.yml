name: Build and release
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      dry_run:
        type: boolean
        description: "Dry Run"
        required: false
        default: false
      tag:
        description: "Tag"
        required: true
        default: "v0.0.0"

run-name: ${{ github.event.inputs.dry_run == 'true' && 'Dry run' || github.event.inputs.tag || github.ref }}

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04 # Use older Ubuntu for better glibc compatibility
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y curl build-essential pkg-config libssl-dev

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Load Rust environment
        run: |
          source $HOME/.cargo/env
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Cache cargo bin
        uses: actions/cache@v4
        with:
          path: ~/.cargo/bin
          key: ubuntu-18.04-cargo-bin-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ubuntu-18.04-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo index
        uses: actions/cache@v4
        with:
          path: ~/.cargo/git
          key: ubuntu-18.04-cargo-git-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ubuntu-18.04-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Setup Zig
        run: |
          curl -L https://ziglang.org/download/0.11.0/zig-linux-x86_64-0.11.0.tar.xz -o zig.tar.xz
          tar -xf zig.tar.xz
          echo "$(pwd)/zig-linux-x86_64-0.11.0" >> $GITHUB_PATH

      - name: Install Arm compile target
        run: |
          source $HOME/.cargo/env
          rustup target add armv7-unknown-linux-gnueabihf

      - name: Install Zigbuild
        run: |
          source $HOME/.cargo/env
          if ! command -v cargo-zigbuild &> /dev/null
          then
              cargo install cargo-zigbuild
          fi

      - name: Build and tar
        run: |
          source $HOME/.cargo/env
          cargo zigbuild --target armv7-unknown-linux-gnueabihf --release
          chmod 777 ./target/armv7-unknown-linux-gnueabihf/release/infoskjerm
          chmod 777 update.py
          tar -czvf infoskjerm.tar.gz update.py \
            -C ./target/armv7-unknown-linux-gnueabihf/release infoskjerm

      - name: Create Release
        if: ${{ ! inputs.dry_run }}
        uses: softprops/action-gh-release@v2
        with:
          files: infoskjerm.tar.gz
          make_latest: "true"
          generate_release_notes: true
          name: Release ${{ github.event.inputs.tag || github.ref }}
          tag_name: ${{ github.event.inputs.tag || github.ref }}
